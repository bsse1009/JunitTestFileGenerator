@Test
public void add () {
	int a = "1";
	int b = 0;
	Calculator obj = new Calculator();
	int exp = 1;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "1";
	int b = 1;
	Calculator obj = new Calculator();
	int exp = 2;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "1";
	int b = 1000;
	Calculator obj = new Calculator();
	int exp = 1001;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "1";
	int b = 999;
	Calculator obj = new Calculator();
	int exp = 1000;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "1";
	int b = 500;
	Calculator obj = new Calculator();
	int exp = 501;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "2";
	int b = 0;
	Calculator obj = new Calculator();
	int exp = 2;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "2";
	int b = 1;
	Calculator obj = new Calculator();
	int exp = 3;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "2";
	int b = 1000;
	Calculator obj = new Calculator();
	int exp = 1002;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "2";
	int b = 999;
	Calculator obj = new Calculator();
	int exp = 1001;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "2";
	int b = 500;
	Calculator obj = new Calculator();
	int exp = 502;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "10000";
	int b = 0;
	Calculator obj = new Calculator();
	int exp = 10000;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "10000";
	int b = 1;
	Calculator obj = new Calculator();
	int exp = 10001;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "10000";
	int b = 1000;
	Calculator obj = new Calculator();
	int exp = 11000;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "10000";
	int b = 999;
	Calculator obj = new Calculator();
	int exp = 10999;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "10000";
	int b = 500;
	Calculator obj = new Calculator();
	int exp = 10500;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "9999";
	int b = 0;
	Calculator obj = new Calculator();
	int exp = 9999;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "9999";
	int b = 1;
	Calculator obj = new Calculator();
	int exp = 10000;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "9999";
	int b = 1000;
	Calculator obj = new Calculator();
	int exp = 10999;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "9999";
	int b = 999;
	Calculator obj = new Calculator();
	int exp = 10998;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "9999";
	int b = 500;
	Calculator obj = new Calculator();
	int exp = 10499;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "5000";
	int b = 0;
	Calculator obj = new Calculator();
	int exp = 5000;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "5000";
	int b = 1;
	Calculator obj = new Calculator();
	int exp = 5001;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "5000";
	int b = 1000;
	Calculator obj = new Calculator();
	int exp = 6000;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "5000";
	int b = 999;
	Calculator obj = new Calculator();
	int exp = 5999;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
@Test
public void add () {
	int a = "5000";
	int b = 500;
	Calculator obj = new Calculator();
	int exp = 5500;
	int res = obj.add(a,b);
	assertEquals(exp,res);
}
