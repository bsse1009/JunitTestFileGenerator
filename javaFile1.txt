@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 0;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 1;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 20;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 19;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "1";
	int b = 10;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 0;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 1;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 20;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 19;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "2";
	int b = 10;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 0;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 1;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 20;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 19;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "20";
	int b = 10;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 0;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 1;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 20;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 19;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "19";
	int b = 10;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 0;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 1;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 20;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 19;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 0;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 0;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 0;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 0;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 0;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 1;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 1;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 1;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 1;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 1;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 50;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 50;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 50;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A+;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 50;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 50;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 49;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = B;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 49;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 49;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 49;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 49;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = A;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 25;
	int d = 0;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 25;
	int d = 1;
	GradeCalculator obj = new GradeCalculator();
	int exp = F;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 25;
	int d = 10;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 25;
	int d = 9;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
@Test
public void getGrade () {
	int a = "10";
	int b = 10;
	int c = 25;
	int d = 5;
	GradeCalculator obj = new GradeCalculator();
	int exp = c;
	int res = obj.getGrade(a,b,c,d);
	assertEquals(exp,res);
}
